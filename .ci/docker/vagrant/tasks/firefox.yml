- name: "Mozilla firefox home location of vagrant user"
  set_fact:
    mozilla_home_dir: "/home/vagrant/.mozilla/firefox/"

- name: Install tools for remote access
  apt:
    pkg: ['libnss3-tools', 'xvfb', 'x11vnc', 'xdotool', 'xpra']
    state: 'present'
    update_cache: yes
    cache_valid_time: 3600

- name: Apt key for mozillateam PPA
  ansible.builtin.get_url:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x9bdb3d89ce49ec21
    dest: /etc/apt/keyrings/mozillateam.asc
    checksum: sha256:9e8dea71928497ab368eeffb022273da157885dad77179305e56af3f804c0ae5

- name: Add firefox apt repository.
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/mozillateam.asc] https://ppa.launchpadcontent.net/mozillateam/ppa/ubuntu {{ ansible_distribution_release }} main "
    state: present
    filename: "mozillateam-ubuntu-ppa-jammy.list"
    update_cache: true

- name: Prioritize firefox apt repository.
  copy:
    dest: "/etc/apt/preferences.d/mozilla-firefox"
    mode: 0644
    content: |
      Package: *
      Pin: release o=LP-PPA-mozillateam
      Pin-Priority: 1001
      
      Package: firefox
      Pin: version 1:1snap1-0ubuntu2
      Pin-Priority: -1

- name: Ensure unattended upgrades does not reinstall firefox
  copy:
    dest: "/etc/apt/apt.conf.d/51unattended-upgrades-firefox"
    mode: 0644
    content: |
      Unattended-Upgrade::Allowed-Origins:: "LP-PPA-mozillateam:${distro_codename}";

- name: Install firefox
  apt:
    pkg: ['firefox']
    state: 'present'
    update_cache: yes
    cache_valid_time: 3600

- name: Ensure XAUTHORITY is exported for user vagrant
  become: true
  become_user: vagrant
  ansible.builtin.lineinfile:
    path: /home/vagrant/.bashrc
    regexp: '^XAUTHORITY='
    line: "export XAUTHORITY=$HOME/.Xauthority"

- name: Check if firefox profile exists
  stat:
    path: "{{ mozilla_home_dir }}"
  register: firefox_profile_exists

- name: Configure firefox
  become: true
  become_user: vagrant
  block:
    - name: Create user directories
      file:
        path: "{{ item }}"
        state: directory
        recurse: true
        mode: 0755
      loop: [ "/home/vagrant/.config/systemd/user/", "/home/vagrant/bin" ]

    - name: Copy firefox script
      copy:
        src: files/x11vnc-firefox.sh
        dest: /home/vagrant/bin/x11vnc-firefox.sh
        mode: 0755

    - name: Copy firefox service file
      copy:
        src: "files/{{ item }}.service"
        dest: "/home/vagrant/.config/systemd/user/{{ item }}.service"
        mode: 0755
      loop: [ "xvfb", "x11vnc", "firefox" ]

    - name: "Enable service {{ item }}"
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        state: started
        daemon_reload: true
        enabled: true
        scope: user
      loop: [ "xvfb", "x11vnc", "firefox" ]

    - name: Wait for firefox to come up
      ansible.builtin.pause:
        seconds: 5

    - name : Find profile location
      find:
        paths: "{{ mozilla_home_dir }}"
        recurse: yes
        file_type: directory
        patterns: '*.default,*.default-release'
      register: output

    - name: Show profile location
      debug: var=item.path
      with_items: "{{ output.files }}"
      failed_when: "{{ output.files | length == 0 }}"

    - name: Add certificate authority to found profiles
      include_tasks: tasks/firefox-profile-ca.yml
      loop: "{{ output.files }}"
      loop_control:
        loop_var: profile
      when: output.files | length > 0

    - name: "Disable firefox"
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        state: stopped
        daemon_reload: true
        enabled: true
        scope: user
      loop: [ "firefox" ]

  when: firefox_profile_exists.stat.exists == False


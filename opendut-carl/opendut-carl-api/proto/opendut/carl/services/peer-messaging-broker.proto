syntax = "proto3";

package opendut.carl.services.peer_messaging_broker;

import "opendut/types/cluster/cluster.proto";
import "opendut/types/peer/peer.proto";
import "opendut/types/vpn/vpn.proto";

service PeerMessagingBroker {
  rpc ListPeers(ListPeersRequest) returns (ListPeersResponse);
  rpc Open(stream Upstream) returns (stream Downstream);
}

message ListPeersRequest {}

message ListPeersResponse {
  repeated opendut.types.peer.PeerId peers = 1;
}

message Upstream {
  oneof message {
    Ping ping = 1;
  }
}

message Downstream {
  oneof message {
    Pong pong = 1;
    AssignCluster assign_cluster = 3;
    ApplyPeerConfiguration apply_peer_configuration = 4;
  }
}

message Ping {}
message Pong {}


message AssignCluster {
  opendut.types.cluster.ClusterAssignment assignment = 1;
}

message ApplyPeerConfiguration {
  opendut.types.peer.PeerConfiguration configuration = 1;
}
